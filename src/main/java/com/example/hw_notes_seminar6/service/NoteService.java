package com.example.hw_notes_seminar6.service;

import com.example.hw_notes_seminar6.model.Note;

import java.util.List;

/**
 *
 *
 */
public interface NoteService {
    /**
     * Получает список всех заметок.
     *
     * @return Список всех заметок, доступных в системе.
     * Если заметок нет, возвращается пустой список.
     */

    List<Note> getAllNotes();

    /**
     * Получает заметку по ее уникальному идентификатору.
     *
     * @param id Идентификатор заметки, которую необходимо найти.
     * @return Заметка с указанным идентификатором.
     * Если заметка с таким идентификатором не найдена, может выбрасываться исключение.
     */
    Note getNoteById(Long id);

    /**
     * Обновляет существующую заметку с новыми данными.
     *
     * @param note Объект заметки с обновленными данными.
     * @return Обновленная заметка после сохранения в базе данных.
     * Это обеспечивает отражение всех изменений, внесенных в заметку.
     */
    Note updateNote(Note note);

    /**
     * Создает новую заметку.
     *
     * @param note Объект новой заметки для создания.
     * @return Созданная заметка после ее сохранения в базе данных.
     */
    Note createNote(Note note);

    /**
     * Удаляет заметку по ее идентификатору.
     *
     * @param id Идентификатор заметки, которую необходимо удалить.
     * Это позволяет убрать заметку из системы.
     */
    void deleteNote(Long id);
}
